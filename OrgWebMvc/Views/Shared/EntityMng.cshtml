@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using OrgWebMvc.Main.Util
@using System.Collections.Generic

<div>
    <script src="~/Scripts/ajax.js"></script>
    <h2>@ViewData["Entity"] Management</h2>
    <!--@@CustomHelper.GenerateForm((Type)ViewData["EntityType"])-->
    <div id="entity-form"></div>
    <!-- @@CustomHelper.GenerateTable((Type)ViewData["EntityType"], (List<object>)ViewData["EntityList"])
    -->
    <div id="info-list">
        <p>Offset: <span id="info-offset"></span></p>

        <p>Total: <span id="info-total"></span></p>
        <p>Limit:</p>
        <select style="width:100px" id="select-limit" onchange="updateLimit()">
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
        </select>
        <p></p>
    </div>
    <div id="button-list" class="btn-group-justified"></div>
    <div id="entity-list">

    </div>
    <script>
        let limit = 5;
        let offset = 0;
        let total = 0;
        let inputs = document.getElementsByName("input-entity");
        let tableList = document.getElementById("entity-list");
        let formPanel = document.getElementById("entity-form");
        let infoLimit = document.getElementById("select-limit");
        let infoOffset = document.getElementById("info-offset");
        let infoTotal = document.getElementById("info-total");
        let buttonList = document.getElementById("button-list");

        let URL = "/Entity/@ViewData["Entity"]Svc";

        function submitEvent(e) {
            e.preventDefault();

            let c = confirm("Are you ready?");
            if (c == false) {
                return;
            }

            let params = "Action=Post";
            let fieldParams = "field_param=${";
            for (let i = 0; i < inputs.length; i++) {
                let field = inputs[i];
                let value = field.value;
                console.log("TYPE of FIELD", typeof (field));
                fieldParams += field.id + "=" + value;
                if (i < inputs.length - 1) {
                    fieldParams += ";";
                }

            }

            fieldParams += "}$";
            params += "&" + fieldParams;
            postReq(URL, params, function (data) {
                if (data.code == 0) {
                    alert("Success");
                    clearField(inputs);
                    loadList();
                } else {
                    alert("Failed");
                }
                console.log("response from api", data);
            }, function (data) {
                alert("Server Error");
                console.log("error", data);
            });

            return false;
        }

        function loadList() {

            postReq(URL, "Action=List&limit=" + limit + "&offset=" + offset, function (data) {
                let jsonResp = data;
                console.log("JSON", jsonResp);
                if (jsonResp.code == 0) {
                    tableList.innerHTML = jsonResp.data;
                    total = jsonResp.count;
                    refreshInfo();
                    generateButton();
                } else {
                    alert("Error loading")
                }
            }, function (data) {
                alert("Server Error");
            });
        }

        function refreshInfo() {
            infoLimit.value = limit;
            infoOffset.innerHTML = offset;
            infoTotal.innerHTML = total;
        }

        function clearField(elements) {
            generateForm(null);
            for (let i = 0; i < elements.length; i++) {
                elements[i].value = "";
            }
        }

        function generateButton() {
            buttonList.innerHTML = "";
            let buttonCount = Math.ceil(total / limit);
            for (let i = 0; i < buttonCount; i++) {
                let btn = document.createElement("button");
                let className = "btn btn-info";
                if (i == offset) {
                    className += " active";
                }
                btn.className = className;
                btn.id = "btn-" + i;
                btn.innerHTML = (i + 1);
                let offst = i;
                btn.onclick = function (e) {
                    setNavProperty(limit, offst);
                    loadList();
                };

                buttonList.appendChild(btn);
            }
        }

        function updateLimit() {
            setNavProperty(infoLimit.value, 0);
            loadList();
        }

        function setNavProperty(_limit, _offset) {
            limit = _limit;
            offset = _offset;
        }

        function generateForm(id) {
            let param = "Action=Form";
            if (id != null) {
                param += "&Id=" + id;
            }
            postReq(URL, param, function (response) {
                formPanel.innerHTML = response.data;
            }, function (data) {
                alert("Server error");
            })
        }

        function editEntity(id) {
            generateForm(id);
        }

        function deleteEntity(id) {
            if (!confirm("Do you want to delete this record?")) {
                return;
            }
            postReq(URL, "Action=Delete&Id=" + id, function (response) {
                if (response.code == 0) {
                    alert("Success");
                    loadList();
                }
            }, function (response) {
                alert("server error");
            });
        }

        generateForm(null);
        loadList();
    </script>
</div>
